#!/usr/bin/perl
###############################################################################
use diagnostics;
use Net::SNMP;
use strict;
use warnings;
###############################################################################
my $WLCMROID = ".1.3.6.1.4.1.14988.1.1.1.5.1";
my $IFACENAMEOID = ".1.3.6.1.2.1.2.2.1.2";
my $SNMPCommunity = "public";
my $SNMPPort = "161";

###############################################################################
## Determine Hostname
my $Host = undef;
$0 =~ /mikrotikcapsman_(.+)*$/;
unless ($Host = $1) {
  exit 2;
}

###############################################################################
## Initiate SNMP Session
my ($Session, $Error) = Net::SNMP->session (-hostname  => $Host,
                                            -community => $SNMPCommunity,
                                            -port      => $SNMPPort,
                                            -timeout   => 60,
                                            -retries   => 5,
                                            -version   => 1);
if (!defined($Session)) {
  die "Croaking: $Error";
}

###############################################################################
## Execution
my $ifaces = {};

my $ifacetable = $Session->get_table(-baseoid => $IFACENAMEOID);

if (!defined $ifacetable) {
    my $err = $Session->error;
    print "ERROR: $err\n";
    return 0;
}

for my $entry (sort keys %{$ifacetable}) {
    my $ifaceid = (split /\./, $entry)[-1];
    my $ifacename = $ifacetable->{$entry};

    if ($ifacename =~ /^cap/) {
        $ifaces->{$ifaceid}->{count} = 0;
        $ifaces->{$ifaceid}->{name} = $ifacename;
    }
}

my $wlcmrtable = $Session->get_table(-baseoid => $WLCMROID);

if (!defined $wlcmrtable) {
    my $err = $Session->error;
    print "ERROR: $err\n";
    return 0;
}

for my $entry (sort keys %{$wlcmrtable}) {
    my $tail;
    ($tail = $entry) =~ s/^$WLCMROID//;
    my ($varnum, $ifaceid) = (split /\./, $tail)[1, -1];

    if ($varnum == 1) {
        $ifaces->{$ifaceid}->{count}++;
    }
}

###############################################################################
## Configuration
if ($ARGV[0] && $ARGV[0] eq "config") {
  print "host_name " . $Host . "\n";
  print "graph_args --base 1000 -l 0\n";
  print "graph_title Mikrotik CAPsMAN Interface Usage\n";
  print "graph_category network\n";
  print "graph_info This graph shows the number of devices registered to each CAPsMAN interface.\n";
  print "graph_vlabel Number\n";
  print "graph_scale no\n";

  for my $iface (sort keys %{$ifaces}) {
    print "capif_" . $iface . "_count.label " . $ifaces->{$iface}->{name} . "\n";
    print "capif_" . $iface . "_count.type "  . "GAUGE\n";
    print "capif_" . $iface . "_count.draw "  . "AREASTACK\n";
    print "capif_" . $iface . "_count.info "  . "Devices registered to " . $ifaces->{$iface}->{name} . "\n";
  }

  $Session->close;
  exit;
}

###############################################################################
## Fetch
for my $iface (sort keys %{$ifaces}) {
    print "capif_" . $iface . "_count.value " . $ifaces->{$iface}->{count} . "\n";
}

