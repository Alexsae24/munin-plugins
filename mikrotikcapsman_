#!/usr/bin/perl
###############################################################################
use diagnostics;
use Net::SNMP;
use strict;
use warnings;
###############################################################################
my $WLCMROID = ".1.3.6.1.4.1.14988.1.1.1.5.1";
my $IFACENAMEOID = ".1.3.6.1.2.1.2.2.1.2";
my $SNMPCommunity = "public";
my $SNMPPort = "161";

###############################################################################
## Determine Hostname
my $Host = undef;
$0 =~ /mikrotikcapsman_(.+)*$/;
unless ($Host = $1) {
  exit 2;
}

###############################################################################
## Initiate SNMP Session
my ($Session, $Error) = Net::SNMP->session (-hostname  => $Host,
                                            -community => $SNMPCommunity,
                                            -port      => $SNMPPort,
                                            -timeout   => 60,
                                            -retries   => 5,
                                            -version   => 1);
if (!defined($Session)) {
  die "Croaking: $Error";
}

###############################################################################
## Execution
my $table = $Session->get_table(-baseoid => $WLCMROID);

if (!defined $table) {
    my $err = $Session->error;
    print "ERROR: $err\n";
    return 0;
}

my $ifaces = {};

for my $entry (sort keys %{$table}) {
    my $tail;
    ($tail = $entry) =~ s/^$WLCMROID//;
    my ($var_num, $iface_id) = (split /\./, $tail)[1, -1];

    if (!defined ($ifaces->{$iface_id})) {
        $ifaces->{$iface_id}->{count} = 0;
        $ifaces->{$iface_id}->{name} = "";

        my $ifaceoid = $IFACENAMEOID . "." . $iface_id;
        if (my $ifaceresult = $Session->get_request(-varbindlist => [$ifaceoid])) {
            $ifaces->{$iface_id}->{name} = $ifaceresult->{$ifaceoid};
        }
    }

    if ($var_num == 1) {
        $ifaces->{$iface_id}->{count}++;
    }
}

###############################################################################
## Configuration
if ($ARGV[0] && $ARGV[0] eq "config") {
  print "host_name " . $Host . "\n";
  print "graph_args --base 1000 -l 0\n";
  print "graph_title Mikrotik CAPsMAN Interface Usage\n";
  print "graph_category network\n";
  print "graph_info This graph shows the number of devices registered to each CAPsMAN interface.\n";
  print "graph_vlabel Number\n";
  print "graph_scale no\n";

  while ( my ($iface, $data) = each(%$ifaces) ) {
    print "capif_" . $iface . "_count.label " . $data->{name} . "\n";
    print "capif_" . $iface . "_count.type "  . "GAUGE\n";
    print "capif_" . $iface . "_count.info "  . "Number of current connections to " . $data->{name} . "\n";
  }

  $Session->close;
  exit;
}

###############################################################################
## Fetch
while ( my ($iface, $data) = each(%$ifaces) ) {
    print "capif_" . $iface . "_count.value " . $data->{count} . "\n";
}

